#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <mlx.h>
#include <unistd.h>
#include <math.h>
#include "libft/libft.h"

#define WIN_WIDTH 500
#define WIN_HEIGHT 500

typedef struct	s_program
{
	void *mlx_ptr;
	void *mlx_win;
}				t_program;

int draw_line(void *mlx_ptr, void *win, int beginX, int beginY, int endX, int endY, int color)
{
	double deltaX = endX - beginX;
	double deltaY = endY - beginY;

	int pixels = sqrt((deltaX * deltaX) + (deltaY * deltaY));

	deltaX /= pixels;
	deltaY /= pixels;

	double pixelX = beginX;
	double pixelY = beginY;
	while (pixels)
	{
		mlx_pixel_put(mlx_ptr, win, pixelX, pixelY, color);
		pixelX += deltaX;
		pixelY += deltaY;
		--pixels;
	}
	return (0);
}

void	ft_church_boat3(void *mlx_ptr, void *mlx_win, int x, int y)
{
	draw_line(mlx_ptr, mlx_win, x * 2, y * 2, x * 2 + 20, y * 2, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 200, 200, 250, 250, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 200, 200, 150, 250, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 150, 250, 150, 350, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 250, 250, 250, 350, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 250, 350, 200, 400, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 150, 350, 200, 400, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 200, 275, 200, 325, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 200, 175, 200, 150, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 200, 425, 200, 450, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 265, 235, 275, 225, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 135, 235, 115, 225, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 125, 300, 100, 300, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 275, 300, 300, 300, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 135, 365, 120, 375, 0xff0000);
	draw_line(mlx_ptr, mlx_win, 265, 365, 280, 375, 0xff0000);
}

void	ft_church_boat2(void *mlx_ptr, void *mlx_win, int x, int y)
{
	draw_line(mlx_ptr, mlx_win, x * 2, y * 2, x * 2 + 20, y * 2, 0x008000);
	draw_line(mlx_ptr, mlx_win, 200, 200, 250, 250, 0x008000);
	draw_line(mlx_ptr, mlx_win, 200, 200, 150, 250, 0x008000);
	draw_line(mlx_ptr, mlx_win, 150, 250, 150, 350, 0x008000);
	draw_line(mlx_ptr, mlx_win, 250, 250, 250, 350, 0x008000);
	draw_line(mlx_ptr, mlx_win, 250, 350, 200, 400, 0x008000);
	draw_line(mlx_ptr, mlx_win, 150, 350, 200, 400, 0x008000);
	draw_line(mlx_ptr, mlx_win, 200, 275, 200, 325, 0x008000);
	draw_line(mlx_ptr, mlx_win, 200, 175, 200, 150, 0x008000);
	draw_line(mlx_ptr, mlx_win, 200, 425, 200, 450, 0x008000);
	draw_line(mlx_ptr, mlx_win, 265, 235, 275, 225, 0x008000);
	draw_line(mlx_ptr, mlx_win, 135, 235, 115, 225, 0x008000);
	draw_line(mlx_ptr, mlx_win, 125, 300, 100, 300, 0x008000);
	draw_line(mlx_ptr, mlx_win, 275, 300, 300, 300, 0x008000);
	draw_line(mlx_ptr, mlx_win, 135, 365, 120, 375, 0x008000);
	draw_line(mlx_ptr, mlx_win, 265, 365, 280, 375, 0x008000);
}

void	ft_church_boat(void *mlx_ptr, void *mlx_win, int x, int y)
{
	draw_line(mlx_ptr, mlx_win, x * 2, y * 2, x * 2 + 20, y * 2, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 200, 200, 250, 250, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 200, 200, 150, 250, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 150, 250, 150, 350, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 250, 250, 250, 350, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 250, 350, 200, 400, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 150, 350, 200, 400, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 200, 275, 200, 325, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 200, 175, 200, 150, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 200, 425, 200, 450, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 265, 235, 275, 225, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 135, 235, 115, 225, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 125, 300, 100, 300, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 275, 300, 300, 300, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 135, 365, 120, 375, 0xFFFFFF);
	draw_line(mlx_ptr, mlx_win, 265, 365, 280, 375, 0xFFFFFF);
}

int mouse_event(int button, int x, int y, void *param, void *mlx_ptr, void *mlx_win)
{
	// Whenever the event is triggered, print the value of button to console.
	ft_putnbr(button);
	if (button == 3)
		mlx_clear_window(mlx_ptr, mlx_win);

	//mlx_pixel_put(mlx_ptr, mlx_win, 40, 40, 0x008000);
	return (button);
}

int	main(void)
{
	void	*mlx_ptr;
	void	*mlx_win;
	void	*mlx_win2;
	void	*mlx_img;
	int		x;
	int		y;

	mlx_ptr = NULL;
	mlx_win = NULL;
	mlx_ptr = mlx_init();
	mlx_win = mlx_new_window(mlx_ptr, WIN_WIDTH, WIN_HEIGHT, "Paskavittupiirr√§saatana");

	x = 30;
	y = 30;
	while (x < WIN_WIDTH && y < WIN_HEIGHT)
	{
		while (x < 46)
		{
			mlx_pixel_put(mlx_ptr, mlx_win, x, y, 0xFFFFFF);
			x++;
		}
		x = 30;
		y++;
		if (y > 45)
			break ;
	}
	mlx_string_put(mlx_ptr, mlx_win, x * 2, y * 2, 0xFFFFFF, "Boat of the church");
	ft_church_boat(mlx_ptr, mlx_win, x, y);

	/* Second Window below here	/
	/							/
	/							/
	/___________________________/
	*/

	mlx_win2 = NULL;
	mlx_win2 = mlx_new_window(mlx_ptr, 800, 840, "tokawindouwi");

	mlx_img = NULL;
	mlx_img = mlx_new_image(mlx_ptr, 640, 360);


	int		pixel_bits;
	int		line_bytes;
	int		endian;
	int		pixel;
	int		color;
	char	*buf;

	buf = mlx_get_data_addr(mlx_img, &pixel_bits, &line_bytes, &endian);

	color = 0xABCDEF;

	printf("linebytes: %d\n", line_bytes);
	printf("pixel_bits: %d\n", pixel_bits);
	printf("endian: %d\n", endian);
	if (pixel_bits != 32)
		color = mlx_get_color_value(mlx_ptr, color);
	for(int y = 0; y < 360; ++y)
	for(int x = 0; x < 640; ++x)
	{
		pixel = (y * line_bytes) + (x * 4);

		if (endian == 1)
		{
			buf[pixel + 0] = (color >> 24);
			buf[pixel + 1] = (color >> 16) & 0xFF;
			buf[pixel + 2] = (color >> 8) & 0xFF;
			buf[pixel + 3] = (color) & 0xFF;
		}
		if (endian == 0)
		{
			buf[pixel + 0] = (color) & 0xFF;
			buf[pixel + 1] = (color >> 8) & 0xFF;
			buf[pixel + 2] = (color >> 16) & 0xFF;
			buf[pixel + 3] = (color >> 24);
		}
	}

/*	line_bytes /= 4;

	int color = 00ff00;

	for(int y = 0; y < 360; ++y)
	for(int x = 0; x < 640; ++x)
	{
		buf[(y * line_bytes) + x] = color;
	}*/

	mlx_put_image_to_window(mlx_ptr, mlx_win2, mlx_img, 0, 0);
	ft_church_boat(mlx_ptr, mlx_win2, x, y);

	ft_church_boat2(mlx_ptr, mlx_win, 13, 14);
	int button = mlx_mouse_hook(mlx_win, &mouse_event, 0);
	/*if (button == 3)
		ft_church_boat2(mlx_ptr, mlx_win, 13, 14);
	if (button == 1)
		ft_church_boat3(mlx_ptr, mlx_win, 13, 14);*/

	mlx_loop(mlx_ptr);
}
